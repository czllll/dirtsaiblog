---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import "../../styles/globals.css";
import ProfileCard from "@/components/ProfileCard.astro";
import SideContent from "@/components/SideContent.astro";
import {formatDate, getTagUrl} from "../../components/Post.astro";
import { getReadingTime } from '../../utils/readingTime';
// export const prerender = true;

export const getStaticPaths = async () => {
    const posts = await getCollection("posts");
    const paths = posts.map((post: { slug: any }) => {
        return {
            params: {
                slug: post.slug,
            },
            props: {
                post,
            },
        };
    });
    return paths;
};

type Props = {
    post: CollectionEntry<"posts">;
};

const { post } = Astro.props;

const { Content } = await post.render();

const readingTimeStats = getReadingTime(post.body);

---

<Layout title={post.data.title}>
    <div class="relative w-full h-[50vh] min-h-[400px] overflow-hidden">
        <img
            src={post.data.image}
            alt="Header background"
            class="absolute inset-0 w-full h-full object-cover"
        />
        <div
            class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"
        >
        </div>
        <div class="absolute bottom-0 left-0 right-0 p-8 text-white">
            <h1 class="text-4xl font-bold mb-4">{post.data.title}</h1>
            <div class="flex items-center space-x-4 text-sm">
                <span>{formatDate(post.data.date)</span>
                <span>{Math.ceil(readingTimeStats.minutes)} mins read</span>
                <span>1 views</span>
                <span>
                        {
                            post.data.tags.map((tag, index) => (
                                <>
                                    <a
                                        href={getTagUrl(tag)}
                                        class="hover:underline text-teal-500"
                                    >
                                        #{tag}
                                    </a>
                                    {index < post.data.tags.length - 1
                                        ? " "
                                        : ""}
                                </>
                            ))
                        }
                    </span>
            </div>
        </div>
    </div>
    <div
        class="flex flex-col mt-8 lg:flex-row px-2 w-[85vw] mx-auto min-w-[320px]"
    >
        <div class="w-full lg:w-3/4 p-1 lg:mb-0 lg:mr-6 transition-all duration-300 ease-linear">
            <div class="prose prose-lg dark:prose-invert mx-auto max-w-none mb-16">
                <Content />
            </div>
        </div>

        <div class="w-full lg:w-1/4 p-1 transition-all duration-300 ease-linear">
            <ProfileCard />
            <div id="sticky-wrapper" class="transition-[top] duration-300 ease-linear sticky top-[var(--sticky-top,0px)] pt-1">
                <SideContent post={post}/>
            </div>
        </div>
    </div>
</Layout>
